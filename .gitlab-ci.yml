stages:
- prepare
- validate
- build
- release

variables:
  USE_CONTAINER: "true"
  CI_IMAGE: registry.gitlab.com/gitlab-org/ci-cd/docker-machine/ci:alpine3.10

default:
  image: docker:19.03.2
  tags:
  - gitlab-org

.docker_in_docker:
  services:
  - docker:19.03.2-dind
  variables:
    DOCKER_HOST: tcp://docker:2376/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: "/certs"
  tags:
  - gitlab-org-docker

.merge_request_pipelines:
  only:
    refs:
    - merge_requests
    - main@gitlab-org/ci-cd/docker-machine
    - tags@gitlab-org/ci-cd/docker-machine

.build_base: &build_base
  extends:
  - .docker_in_docker
  - .merge_request_pipelines
  stage: build
  before_script:
  - apk add -U make bash
  - export TARGET_OS=$(echo $CI_JOB_NAME | cut -d ' ' -f 1)
  - export TARGET_ARCH=$(echo $CI_JOB_NAME | cut -d ' ' -f 2)
  after_script:
  - "[[ \"$(find bin -type f -name docker-machine*)\" != \"\" ]]"
  artifacts:
    paths:
    - bin/
    expire_in: 1 week

.build_x: &build_x
  <<: *build_base
  script: make build-x

.release:
  image: ${CI_IMAGE}
  stage: release

.release_development:
  only:
    refs:
    - merge_requests@gitlab-org/ci-cd/docker-machine

.release_beta:
  only:
    refs:
    - main@gitlab-org/ci-cd/docker-machine
    - /\Av[0-9]+\.[0-9]+\.[0-9]+-gitlab\.[0-9]+-rc[0-9]+\Z/@gitlab-org/ci-cd/docker-machine

.release_stable:
  only:
    refs:
    - /\Av[0-9]+\.[0-9]+\.[0-9]+-gitlab\.[0-9]+\Z/@gitlab-org/ci-cd/docker-machine

.release_S3:
  dependencies:
  - linux amd64
  - linux arm
  - linux arm64
  - windows amd64
  - darwin amd64
  variables:
    S3_URL: s3://${S3_BUCKET}/${CI_COMMIT_REF_NAME}
  script:
  - ./.gitlab/ci/scripts/release_s3.sh
  environment:
    url: https://${S3_BUCKET}.s3.amazonaws.com/${CI_COMMIT_REF_NAME}/index.html

prepare CI image:
  extends:
  - .docker_in_docker
  - .merge_request_pipelines
  stage: prepare
  script:
  - docker build --pull --no-cache -t ${CI_IMAGE} -f ./.gitlab/ci/Dockerfile ./.gitlab/ci/
  - docker login --username ${CI_REGISTRY_USER} --password ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY}
  - docker push ${CI_IMAGE}
  - docker logout ${CI_REGISTRY}
  only:
    changes:
    - ./gitlab/ci/Dockerfile
    - .gitlab-ci.yml

validate:
  stage: validate
  extends:
  - .docker_in_docker
  - .merge_request_pipelines
  before_script:
  - apk add -U make bash
  script: make build validate

darwin amd64: *build_x
linux amd64: *build_x
openbsd amd64: *build_x
windows amd64: *build_x
linux arm: *build_x
linux arm64: *build_x

release development S3:
  extends:
  - .release
  - .release_development
  - .release_S3
  environment:
    name: development/S3/${CI_COMMIT_REF_NAME}
    on_stop: stop release development S3

stop release development S3:
  dependencies: []
  extends:
  - .release
  - .release_development
  - .release_S3
  variables:
    GIT_STRATEGY: none
  script:
   - aws s3 rm ${S3_URL} --recursive
  when: manual
  environment:
    name: development/S3/${CI_COMMIT_REF_NAME}
    action: stop

release beta S3:
  extends:
  - .release
  - .release_beta
  - .release_S3
  environment:
    name: beta/S3

release stable S3:
  extends:
  - .release
  - .release_stable
  - .release_S3
  environment:
    name: stable/S3
